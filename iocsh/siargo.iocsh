#- ###         MODBUS   siargo   iocsh              ###
#- ####################################################
#- >> Mandatory
#- ASYN_PORT_NAME - MODBUS ASYN <name>
#- SERIAL_PORT	  - serial port device name
#- PREFIX	  - PV PREFIX
#- IOCNAME	  - Prefix for the asynRec
#-

addScan(60)

#-https://epics-modules.github.io/master/asyn/R4-42/asynDriver.html
#-Specify the TCP endpoint and give your 'bus' an arbitrary name eg. "asynstream1".
#-drvAsynIPPortConfigure 'port name' 'host:port [protocol]' priority 'disable auto-connect' noProcessEos
#-drvAsynSerialPortConfigure("portName",
#-		             "ttyName",
#-			     priority,
#-			     noAutoConnect,
#-        		     noProcessEosIn)
#-asynSetOption("portName", addr,
#-		"key", "value")

drvAsynSerialPortConfigure("$(ASYN_PORT_NAME)","$(SERIAL_PORT)",0,0,0)
asynSetOption("$(ASYN_PORT_NAME)",0,"baud", $(BAUD=9600))
asynSetOption("$(ASYN_PORT_NAME)",0,"bits", "8")
asynSetOption("$(ASYN_PORT_NAME)",0,"parity", "none")
asynSetOption("$(ASYN_PORT_NAME)",0,"stop", "1")
		
#modbusInterposeConfig(portName, 
#                      linkType,
#                      timeoutMsec,
#                      writeDelayMsec)

modbusInterposeConfig("$(ASYN_PORT_NAME)",1,500,500)

#drvModbusAsynConfigure	 'Port name'
#			 'Octet port name' 
#			 'Modbus slave address' 
#			 'Modbus function code' 
#			 'Modbus start address' 
#			 'Modbus length' 
#			 'Data type' 
#			 'Poll time (msec)' 
#			 'PLC type'

#drvModbusAsynConfigure($(ASYN_PORT_NAME)_STATUS, "$(ASYN_PORT_NAME)", 2, 3, 0x247A, 16, "UINT16", 4000, "siargo")

drvModbusAsynConfigure(RD_1R, "$(ASYN_PORT_NAME)", 1, 3, -1, 1, "UINT16", 4000, "siargo")
drvModbusAsynConfigure(RD_2R, "$(ASYN_PORT_NAME)", 1, 3, -1, 2, "UINT16", 4000, "siargo")

#drvModbusAsynConfigure(WR_1R, "$(ASYN_PORT_NAME)", 1, 6, -1, 1, "UINT16", 1, "siargo")
#drvModbusAsynConfigure(WR_2R, "$(ASYN_PORT_NAME)", 1, 6, -1, 2, "INT32_BE", 0, "siargo")

drvModbusAsynConfigure(SERNO, "$(ASYN_PORT_NAME)", 1, 3, 0x0030, 16, "STRING_HIGH_LOW", 4000, "siargo")

#drvModbusAsynConfigure(TEMP1, "$(ASYN_PORT_NAME)", 2, 3, 0x1400, 123, "UINT16", 4000, "siargo")
#drvModbusAsynConfigure(TEMP2, "$(ASYN_PORT_NAME)", 2, 3, 0x14FA, 124, "UINT16", 4000, "siargo")
#drvModbusAsynConfigure(TEMP3, "$(ASYN_PORT_NAME)", 2, 3, 0x15F6, 26, "UINT16", 4000, "siargo")

#drvModbusAsynConfigure(MOTOR, "$(ASYN_PORT_NAME)", 2, 3, 0x1800, 24, "UINT16", 4000, "siargo")


#Load your database defining the EPICS records
#dbLoadRecords("siargo.db", "PORT_RD_2R=RD_2R,PORT_RD_1R=RD_1R,PORT_WR_1R=WR_1R,PORT_WR_2R=WR_2R,P=$(PREFIX),D=$(DEV_NAME)")

dbLoadRecords("asynRecord.db","P=$(IOCNAME),R=:asynRec,PORT='$(ASYN_PORT_NAME)',ADDR='0',IMAX='1024',OMAX='256'")

asynSetTraceIOMask "$(ASYN_PORT_NAME)",0,4   # Enable traceIOHex
#asynSetTraceMask "$(ASYN_PORT_NAME)",0,9     # Enable traceError and traceIODriver
